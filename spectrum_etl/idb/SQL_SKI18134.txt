
--------------------------------
--drop table dvidic.ski18134
--delete from dvidic.ski18134
--create table dvidic.ski18134
--	(patient_id char(20),
--	 mrn char(8)) 
--select * from dvidic.ski18134
--------------------------------

  with pt as (
select distinct
	   patient_id,
	   pt_mrn as mrn,
	   pt_pt_deidentification_id,
	   pt_first_name as patient_first_name,
	   pt_last_name as patient_last_name,
	   pt_birth_dte as patient_date_of_birth,
	   pt_sex as patient_gender,
	   pt_race_desc as patient_race,
	   pt_addr1 as patient_residence_address_1,
	   pt_addr2 as patient_residence_address_2,
	   pt_city as patient_residence_address_city,
	   pt_state as patient_residence_address_state,
	   pt_zip_cd as patient_residence_address_zip_code,
	   pt_country as patient_residence_address_country,
	   pt_death_dte as patient_overall_survival_date
  from dv.patient_demographics
  join dvidic.ski18134 --dvidic.rad17703
	on mrn = pt_mrn
 order
	by 1
)

--------------------------------------------------------------------------------------------------
, xm as (
select distinct 
	   pdrx_pt_deidentification_id, 
	   pdrx_dmp_patient_id,
	   t.*-- , pdrx_xml_value, dt.pdrx_path_rpt_id 
  from dv.pathology_dmp_results_xml dt
 cross
  join xmltable('$c/root/*' passing dt.PDRX_XML_VALUE as "c" columns 
	   tumor_type_name varchar(264) path '../meta-data/tumor_type_name',
	   tumor_type_code varchar(100) path '../meta-data/tumor_type_code',
	   primary_site varchar(100) path '../meta-data/primary_site',
	   metastasis_site varchar(100) path '../meta-data/metastasis_site',
	   part_description varchar(2000) path '../meta-data/part_description'
   	) t  
 where pdrx_pt_deidentification_id in (select pt_pt_deidentification_id from pt)
   and(tumor_type_name is not null
	or tumor_type_code is not null
	or primary_site is not null
	or metastasis_site is not null)
--	or part_description is not null)
 order
	by 1
)

--select * from xm

--------------------------------------------------------------------------------------------------
, tm as (
select tm_mrn as patient_mrn,
	   max(tm_dx_dte) as patient_diagnosis_date
  from pt
  join idb.cdb_tumor
	on tm_mrn = mrn
  join idb.clm h
	on tm_hist_cd = h.clm_clsf_cd
  join idb.clm s
	on tm_site_cd = s.clm_clsf_cd
 where tm_case_sts in ('1','3','6','7','8')
   and tm_site_cd = 'C569'	--ovary
 group
	by tm_mrn
)

--select * from tm

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
, consents as (
select distinct
	   patient_id,
	   ac_mrn as patient_mrn,
	   ac_irb_no as patient_consent_irb,
	   ac_cons_dte as patient_consent_date,
	   reg_network_dscrp as patient_consent_location
  from pt
  join idb.accruals
	on ac_mrn = mrn
  left
  join nn.crdb_dash_pt
	on pt_mrn = ac_mrn
   and prt_id = ac_irb_no
 order
	by 1
)

--select * from consents

--------------------------------------------------------------------------------------------------
, consults as (
select distinct --cdd_doc_name
	   patient_id,
	   cdd_mrn as patient_mrn,
	   cdo_value_text as consult
--	   cdd_doc_guid, cdd_service_dte, cdd_doc_name
--	   cdo_section, cdo_ctlg_displ_nm, cdo_mstr_item_nm, cdo_item_name, cdo_value_text, cdo_large_value_text_ind
  from pt
  join idb.cd_document
	on cdd_mrn = mrn
  join idb.cd_observation
	on cdo_doc_guid = cdd_doc_guid
   and cdo_authored_dte = cdd_authored_dte
 where cdd_cancel_ind     = '0'
   and cdd_incomplete_ind = '0'
   and cdd_doc_name = 'Initial Consult/Initial Visit, AMB - DOM-Gynecologic Med Onc'
   and cdo_item_name = 'GYN History'
--   AND UPPER(CDD_DOC_NAME) LIKE '%GYN%'
--   AND UPPER(CDD_DOC_NAME) LIKE '%MED%ONC%%'
--   AND UPPER(CDD_DOC_NAME) LIKE '%INIT%'
--   AND UPPER(CDD_DOC_NAME) LIKE '%CON%'
 order
	by 1
)

--select * from consults

--------------------------------------------------------------------------------------------------
, diagnoses as (
select distinct
	   patient_id,
	   tm_mrn as patient_mrn,
	   tm_dx_dte as diagnosis_date,
	   tm_icd9_cd as diagnosis_icd9,
	   tm_icd10_cd as diagnosis_icd10,
	   tm_tumor_seq as diagnosis_sequence_number,
	   s.clm_clsf_desc_msk as diagnosis_site_desc,
	   tm_site_cd as diagnosis_site_code,
	   h.clm_clsf_desc_msk as diagnosis_hist_desc,
	   tm_hist_cd as diagnosis_histology_code,
	   tm_laterality_cd as diagnosis_laterality_code,
	   la.av_desc as diagnosis_laterality,
	   tm_ca125_pretrx_interp as diagnosis_ca125,
	   tm_cea_pretrx_interp as diagnosis_cea,
	   tm_smoking_hx as diagnosis_smoking_history_code,
	   sm.av_desc as diagnosis_smoking_history,
	   tm_dx_confrm_cd as diagnosis_confirmation_code,
	   cc.cdb_av_desc as diagnosis_confirmation
  from pt
  join idb.cdb_tumor
	on tm_mrn = mrn
  join idb.clm h
	on tm_hist_cd = h.clm_clsf_cd
  join idb.clm s
	on tm_site_cd = s.clm_clsf_cd
  left
  join idb.allowvals sm
    on sm.av_element = 'SMOKING_HX'
   and sm.av_code = tm_smoking_hx
  left
  join idb.allowvals la
    on la.av_element = 'LATERALITY_CD'
   and la.av_code = tm_laterality_cd
  left
  join idb.cdb_allowvals cc
    on cc.cdb_av_element = 'DX_CONFRM_CD'
   and cdb_av_code = tm_dx_confrm_cd
   and cdb_av_cd_sts = 'A'
 where tm_case_sts in ('1','3','6','7','8')
   and tm_site_cd = 'C569'	--ovary
 order
	by 1
)

--select * from diagnoses

--------------------------------------------------------------------------------------------------
, measures as (
select distinct
	   patient_id,
	   pmh_mrn as patient_mrn,
	   pmh_measure_dte as measure_date,
	   pmh_ht_cm as measure_height,
	   pmh_wt_kg as measure_weight
  from pt
  join idb.pt_measures_hx
	on pmh_mrn = mrn
 order
	by 1
)

--select * from measures

--------------------------------------------------------------------------------------------------
, labs as (
select distinct
	   patient_id,
	   lr_mrn as patient_mrn,
       lr_performed_dt as laboratory_test_datetime,
	   lr_accession_no as laboratory_accession_no,
	   lr_cluster_id as laboratory_test_cluster,
	   lr_test_name as laboratory_test_name,
	   lr_subtest_name as laboratory_test_subname,
	   lr_result_value as laboratory_test_biomarker_level,
	   lr_unit_measure as laboratory_test_biomarker_units,
	   lr_result_type_cd as laboratory_test_type,
	   lr_result_sts_cd as laboratory_test_status,
	   lr_abnormality_cd as laboratory_test_abnormality,
	   lr_test_up_limit as laboratory_test_upper_limit,
	   lr_test_low_limit as laboratory_test_lower_limit--,
--       ltl_text_result as text_result
  from pt
  join idb.lab_results 
	on lr_mrn = mrn
--         left
--         join idb.lab_text_line                                  
--           on ltl_result_guid = lr_result_guid
 where 1=1
 order
	by 1
)

--select * from labs

--------------------------------------------------------------------------------------------------
, chemo as (
select distinct
	   patient_id,
	   apr_mrn as patient_mrn,
	   apr_route as treatment_administration_route,
	   apr_start_dt as treatment_start_datetime,
	   apr_end_dt as treatment_end_datetime,
	   apr_location as treatment_location,
	   apr_drug_name as treatment_name_rx,
	   apr_generic_name as treatment_name_rx_ontology,
	   apr_total_given_dose as treatment_dose_value_rx,
	   apr_dose_uom as treatment_dose_unit_rx,
	   apr_duration as treatment_duration,
	   apr_set_name as treatment_order_set

  from pt
  join idb.antineoplastic_pt_rx
	on apr_mrn = mrn
  join idb.chemo_drug_generic
	on apr_generic_name = cdg_generic_name
   and cdg_chemo_flag = 'Y'
 order
	by 1
)

--select * from chemo

--------------------------------------------------------------------------------------------------
, surgery as (
select distinct
	   patient_id,
	   mrn as patient_mrn,
	   sse_surg_dte as surgery_date,
	   ssp_proc_cpt4_cd as surgery_cpt_code,
	   ssp_proc_cpt4_desc as surgery_procedure_desc,
--	   ssp_surg_svc_cd as surgery_service
	   doc_dr_no as surgery_dr_no, 
	   ssp_surg_last_nm as surgery_surgeon_last_name,
	   ssp_surg_first_nm as surgery_surgeon_first_name,
	   doc_acdmc_dpt as surgery_department,
	   doc_acdmc_svc as surgery_service
  from pt
  join idb.srg_surg_event
	on mrn = sse_mrn
  join idb.srg_surg_procedure
	on sse_log_id = ssp_log_id
  left
  join idb.doc
	on ssp_res_id = doc_dr_no
 where 1=1
   and ssp_proc_cpt4_cd not like '9999%'
--   and sse_surg_loc not like '%ir%' and sse_surg_loc not like '%endo%' and sse_source_type <> 'e'
 order
	by 1
)

--select * from surgery

--------------------------------------------------------------------------------------------------
, specimen_ppbc as (
select distinct
	   patient_id,
	   mrn as patient_mrn,
	   tba_procurement_dte as specimen_ppbc_procurement_date,
	   tba_resect_dt as specimen_ppbc_resection_datetime,
	   tba_accession_num as specimen_ppbc_accession_number,
	   tba_part_num as specimen_ppbc_part_num,
	   tba_sub_part_num as specimen_ppbc_sub_part_num,
	   tbd_specimen_type_desc as specimen_ppbc_class,
	   tba_site_desc as specimen_ppbc_site,
	   tba_sub_site_desc as specimen_ppbc_sub_site,
	   tba_sub2_site_desc as specimen_ppbc_sub_site2,
	   tbd_category_desc as specimen_ppbc_type,
	   tbd_quality_desc as specimen_ppbc_preservation,
	   tbd_reserved_request_id as specimen_ppbc_reserved_request_id,
--	   tbd_distribution_id,
	   tbd_distribution_dt as specimen_ppbc_distribution_datetime,
	   tbd_request_id as specimen_ppbc_request_id

  from pt
  join dv.tissue_bank_accession tba
	on tba_pt_deidentification_id = pt_pt_deidentification_id
  left
  join dv.tissue_bank_detail tbd
	on tba_accession_num = tbd_accession_num
   and tba_part_num = tbd_part_num
   and tba_sub_part_num = tbd_sub_part_num
 where 1=1
   and tbd_category_desc = 'Tumor'
   and(tbd_reserved_request_id in ('1232')
	or(tbd_reserved_request_id in ('1204')
   and tbd_distribution_dt is null))
 order
	by 1
)

--select * from specimen_ppbc

--------------------------------------------------------------------------------------------------
, specimen_lab_medicine as (
select distinct
	   patient_id,
	   lr_mrn as patient_mrn,
       lr_performed_dt as specimen_lab_medicine_datetime,
	   lr_accession_no as specimen_lab_medicine_accession_no,
	   lr_cluster_id as specimen_lab_medicine_test_cluster,
	   lr_test_name as specimen_lab_medicine_test_name,
	   lr_subtest_name as specimen_lab_medicine_subname,
	   lr_result_value as specimen_lab_medicine_test_biomarker_level,
	   lr_unit_measure as specimen_lab_medicine_test_biomarker_units,
	   lr_result_type_cd as specimen_lab_medicine_test_type,
	   lr_result_sts_cd as specimen_lab_medicine_test_status,
	   lr_abnormality_cd as specimen_lab_medicine_test_abnormality,
	   lr_test_up_limit as specimen_lab_medicine_test_upper_limit,
	   lr_test_low_limit as specimen_lab_medicine_test_lower_limit--,
--       ltl_text_result as text_result
  from pt
  join idb.lab_results 
	on lr_mrn = mrn
--         left
--         join idb.lab_text_line                                  
--           on ltl_result_guid = lr_result_guid
 where 1=1
   and lr_test_name = 'cfDNA'
 order
	by 1
)

--select * from specimen_lab_medicine

--------------------------------------------------------------------------------------------------
, specimen_imf as (
select distinct
	   patient_id,
	   ia.pt_mrn as patient_mrn,
	   ia.imf_accession_id as specimen_imf_accession_id,
	   ia.prt_id as specimen_imf_prt_id,
	   ia.imf_prt_id as specimen_imf_imf_prt_id,
	   ia.protocol_dscrp as specimen_imf_protocol_dscrp,
	   ia.pt_seq_id as specimen_imf_pt_seq_id,
	   ia.visit as specimen_imf_visit,
	   ia.notes as specimen_imf_notes,
	   
	   isr.imf_sample_received_id as specimen_imf_sample_received_id,
	   isr.tube_type as specimen_imf_tube_type,
	   isr.tube_type_dscrp as specimen_imf_tube_type_dscrp,
	   isr.tube_num as specimen_imf_tube_num,
	   isr.collection_datetime as specimen_imf_collection_datetime,
	   isr.received_datetime as specimen_imf_received_datetime,
	   isr.received_by as specimen_imf_received_by,
	   isr.received_by_dscrp as specimen_imf_received_by_dscrp,

	   ip.imf_product_id as specimen_imf_product_id,
	   ip.product_type as specimen_imf_product_type,
	   ip.product_type_dscrp as specimen_imf_product_type_dscrp,
	   ip.total_vol as specimen_imf_total_vol,
	   ip.total_vol_unit as specimen_imf_total_vol_unit,
	   /*ip.unit_dscrp,*/
	   ip.viable_cells as specimen_imf_viable_cells,
	   ip.viablility as specimen_imf_viablility,
	   ip.total_cells_num as specimen_imf_total_cells_num,
	   ip.total_viable_cells_original as specimen_imf_total_viable_cells_original,
	   ip.total_cells_num_original as specimen_imf_total_cells_num_original,
	 
	   ipd.imf_product_dtl_id as specimen_imf_product_dtl_id,
	   ipd.cells_num as specimen_imf_cells_num,
	   ipd.volume as specimen_imf_volume,
	   ipd.volume_unit as specimen_imf_volume_unit,
	   /*ipd.unit_dscrp,*/
	   ipd.imf_tank_slot_seq_id as specimen_imf_tank_slot_seq_id,
	   ipd.check_in_time as specimen_imf_check_in_time,
	   ipd.check_in_person as specimen_imf_check_in_person,
	   ipd.vial_num as specimen_imf_vial_num,

	   ico.imf_check_out_id as specimen_imf_check_out_id,
	   ico.check_out_time as specimen_imf_check_out_time,
	   ico.check_out_person as specimen_imf_check_out_person,
	   ico.check_out_volume as specimen_imf_check_out_volume,
	   ico.requester as specimen_imf_requester,
	   ico.purpose as specimen_imf_purpose

  from pt
  join nn.imf_accession ia
	on pt_mrn = mrn

  join nn.imf_sample_received isr
	on ia.imf_accession_id = isr.imf_accession_id

  join nn.imf_product ip
	on isr.imf_sample_received_id = ip.imf_sample_received_id

  join nn.imf_product_dtl ipd
	on ip.imf_product_id = ipd.imf_product_id

  left
  join nn.imf_check_out ico
	on ipd.imf_product_dtl_id = ico.imf_product_dtl_id

-- where ia.imf_prt_id = '15-200'

 order
	by 1
)

--select * from specimen_imf

--------------------------------------------------------------------------------------------------

, path as (
select distinct
	   patient_id,
	   prpt_mrn as patient_mrn,
	   prpt_accession_no as he_pathology_accession_number,
	   '' as he_pathology_slide_id,
	   prpt_procedure_dte as he_pathology_acquisition_date,
	   prpt_report_dte as he_pathology_report_date,
	   prpt_report_type as he_pathology_report_type,
	   prpt_report_type_desc as he_pathology_report_description,

	   case when length(prpt_report) <= 15000 then rtrim(cast(substr(prpt_report, 1, 15000) as varchar(15000))) else
 	 		cast(substr(prpt_report, 1, 15000) as varchar(15000)) 
			end as he_pathology_report, 	 
	   case when length(prpt_report) > 15000 then rtrim(cast(substr(prpt_report, 15001, 15000) as varchar(15000))) else  ''
			end as he_pathology_report2

  from pt
  join dv.pathology_report_v
	on prpt_pt_deidentification_id = pt_pt_deidentification_id
-- where prpt_report_type_desc in (
--		'Autopsy Report',
--		'Hematopathology Report',
--		'Surgical Pathology')
 order
	by 1
)

--select * from path

--------------------------------------------------------------------------------------------------
, impact as (
select distinct 
	   patient_id,
	   prpt_mrn as patient_mrn,
	   pdrx_dmp_sample_id as impact_dmp_sample_id,
	   prpt_accession_no as impact_dmp_accession_number,
	   prpt_procedure_dte as impact_dmp_procedure_date,
	   prpt_report_dte as impact_dmp_report_date,

	   case when length(prpt_report) <= 15000 then rtrim(cast(substr(prpt_report, 1, 15000) as varchar(15000))) else
 	 		cast(substr(prpt_report, 1, 15000) as varchar(15000)) 
			end as impact_dmp_report, 	 
	   case when length(prpt_report) > 15000 then rtrim(cast(substr(prpt_report, 15001, 15000) as varchar(15000))) else  ''
			end as impact_dmp_report2

  from pt
  join dv.pathology_dmp_results_xml
	on pdrx_pt_deidentification_id = pt_pt_deidentification_id
  join dv.pathology_report_v
	on pdrx_accession_no = prpt_accession_no
 order
	by 1
)

--select * from impact

--------------------------------------------------------------------------------------------------
, ct as (
select distinct
	   patient_id,
       pt_mrn as patient_mrn, 
	   rrpt_accession_no as ct_accession_no,
       rrpt_performed_dt as ct_acquisition_datetime,
	   rrpt_order_location as ct_acquisition_location,
	   rrpt_procedure_name as ct_region,
	   REPLACE(DV.REGEXSTR('(?i)Electronically\W*Signed\W*By\W*:? ?[^\r\n\(]*',RRPT_REPORT_TXT), DV.REGEXSTR('(?i)Electronically\W*Signed\W*By\W*:? ?', RRPT_REPORT_TXT), '') AS ct_radiologist_name,
	   REPLACE(REPLACE(DV.REGEXSTR('(?i)IMPRESSION:[\w\W]*(?=DICTATED BY:)' ,RRPT_REPORT_TXT),'IMPRESSION:',''),'FINAL REPORT','') as ct_scan_impression,
	   case when length(RRPT_REPORT_TXT) <= 15000 then rtrim(cast(substr(RRPT_REPORT_TXT, 1, 15000) as varchar(15000))) else
 	 		cast(substr(RRPT_REPORT_TXT, 1, 15000) as varchar(15000)) 
			end as ct_scan_report, 	 
	   case when length(RRPT_REPORT_TXT) > 15000 then rtrim(cast(substr(RRPT_REPORT_TXT, 15001, 15000) as varchar(15000))) else  ''
			end as ct_scan_report2

FROM pt
		 JOIN /* DV.PATIENT_DEMOGRAPHICS_V */ "DV"."PATIENT_DEMOGRAPHICS_V" "T1" 
			ON PT_MRN = mrn
    LEFT JOIN /* DV.PATIENT_DEIDENTIFIED */ "DV"."PATIENT_DEIDENTIFIED" "T3" 
            ON "T1"."PT_PT_DEIDENTIFICATION_ID" = "T3"."PDI_PT_DEIDENTIFICATION_ID" 
    LEFT JOIN /* DV.RADIOLOGY_REPORT_V */ "DV"."RADIOLOGY_REPORT_V" "T2" 
            ON "T3"."PDI_PT_DEIDENTIFICATION_ID" = "T2"."RRPT_PT_DEIDENTIFICATION_ID" 
    LEFT JOIN /* DV.PATIENT_IDENTIFICATION_MRN_V */ "DV"."PATIENT_IDENTIFICATION_MRN_V" "T4" 
            ON "T1"."PT_PT_DEIDENTIFICATION_ID" = "T4"."PI_PT_DEIDENTIFICATION_ID"  
WHERE   RRPT_ORDER_GROUP like '%CT%'
 order
	by 1
)

--select * from ct

--------------------------------------------------------------------------------------------------
, mri as (
select distinct
	   patient_id,
       pt_mrn as patient_mrn, 
	   rrpt_accession_no as mri_accession_no,
       rrpt_performed_dt as mri_acquisition_datetime,
	   rrpt_order_location as mri_acquisition_location,
	   rrpt_procedure_name as mri_region,
	   REPLACE(DV.REGEXSTR('(?i)Electronically\W*Signed\W*By\W*:? ?[^\r\n\(]*',RRPT_REPORT_TXT), DV.REGEXSTR('(?i)Electronically\W*Signed\W*By\W*:? ?', RRPT_REPORT_TXT), '') AS mri_radiologist_name,
	   REPLACE(REPLACE(DV.REGEXSTR('(?i)IMPRESSION:[\w\W]*(?=DICTATED BY:)' ,RRPT_REPORT_TXT),'IMPRESSION:',''),'FINAL REPORT','') as mri_scan_impression,
	   case when length(RRPT_REPORT_TXT) <= 15000 then rtrim(cast(substr(RRPT_REPORT_TXT, 1, 15000) as varchar(15000))) else
 	 		cast(substr(RRPT_REPORT_TXT, 1, 15000) as varchar(15000)) 
			end as mri_scan_report, 	 
	   case when length(RRPT_REPORT_TXT) > 15000 then rtrim(cast(substr(RRPT_REPORT_TXT, 15001, 15000) as varchar(15000))) else  ''
			end as mri_scan_report2

FROM pt
		 JOIN /* DV.PATIENT_DEMOGRAPHICS_V */ "DV"."PATIENT_DEMOGRAPHICS_V" "T1" 
			ON PT_MRN = mrn
    LEFT JOIN /* DV.PATIENT_DEIDENTIFIED */ "DV"."PATIENT_DEIDENTIFIED" "T3" 
            ON "T1"."PT_PT_DEIDENTIFICATION_ID" = "T3"."PDI_PT_DEIDENTIFICATION_ID" 
    LEFT JOIN /* DV.RADIOLOGY_REPORT_V */ "DV"."RADIOLOGY_REPORT_V" "T2" 
            ON "T3"."PDI_PT_DEIDENTIFICATION_ID" = "T2"."RRPT_PT_DEIDENTIFICATION_ID" 
    LEFT JOIN /* DV.PATIENT_IDENTIFICATION_MRN_V */ "DV"."PATIENT_IDENTIFICATION_MRN_V" "T4" 
            ON "T1"."PT_PT_DEIDENTIFICATION_ID" = "T4"."PI_PT_DEIDENTIFICATION_ID"  
WHERE   RRPT_ORDER_GROUP like '%MR%'
 order
	by 1
)

--select * from mri

--------------------------------------------------------------------------------------------------
, pet as (
select distinct
	   patient_id,
       pt_mrn as patient_mrn, 
	   rrpt_accession_no as pet_accession_no,
       rrpt_performed_dt as pet_acquisition_datetime,
	   rrpt_order_location as pet_acquisition_location,
	   rrpt_procedure_name as pet_region,
	   REPLACE(DV.REGEXSTR('(?i)Electronically\W*Signed\W*By\W*:? ?[^\r\n\(]*',RRPT_REPORT_TXT), DV.REGEXSTR('(?i)Electronically\W*Signed\W*By\W*:? ?', RRPT_REPORT_TXT), '') AS pet_radiologist_name,
	   REPLACE(REPLACE(DV.REGEXSTR('(?i)IMPRESSION:[\w\W]*(?=DICTATED BY:)' ,RRPT_REPORT_TXT),'IMPRESSION:',''),'FINAL REPORT','') as pet_scan_impression,
	   case when length(RRPT_REPORT_TXT) <= 15000 then rtrim(cast(substr(RRPT_REPORT_TXT, 1, 15000) as varchar(15000))) else
 	 		cast(substr(RRPT_REPORT_TXT, 1, 15000) as varchar(15000)) 
			end as pet_scan_report, 	 
	   case when length(RRPT_REPORT_TXT) > 15000 then rtrim(cast(substr(RRPT_REPORT_TXT, 15001, 15000) as varchar(15000))) else  ''
			end as pet_scan_report2

FROM pt
		 JOIN /* DV.PATIENT_DEMOGRAPHICS_V */ "DV"."PATIENT_DEMOGRAPHICS_V" "T1" 
			ON PT_MRN = mrn
    LEFT JOIN /* DV.PATIENT_DEIDENTIFIED */ "DV"."PATIENT_DEIDENTIFIED" "T3" 
            ON "T1"."PT_PT_DEIDENTIFICATION_ID" = "T3"."PDI_PT_DEIDENTIFICATION_ID" 
    LEFT JOIN /* DV.RADIOLOGY_REPORT_V */ "DV"."RADIOLOGY_REPORT_V" "T2" 
            ON "T3"."PDI_PT_DEIDENTIFICATION_ID" = "T2"."RRPT_PT_DEIDENTIFICATION_ID" 
    LEFT JOIN /* DV.PATIENT_IDENTIFICATION_MRN_V */ "DV"."PATIENT_IDENTIFICATION_MRN_V" "T4" 
            ON "T1"."PT_PT_DEIDENTIFICATION_ID" = "T4"."PI_PT_DEIDENTIFICATION_ID"  
WHERE   RRPT_ORDER_GROUP like '%PET%'
    AND RRPT_ORDER_GROUP not like '%CT%'
 order
	by 1
)

--select * from pet

--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
select distinct
	   patient_id,
	   mrn as patient_mrn,
	   pdrx_dmp_patient_id as patient_dmp_id,
	   pt_pt_deidentification_id as patient_darwin_id,
	   '' as patient_cmo_id,
	   patient_first_name,
	   patient_last_name,
	   patient_date_of_birth,
	   patient_gender,
	   patient_race,
	   patient_residence_address_1,
	   patient_residence_address_2,
	   patient_residence_address_city,
	   patient_residence_address_state,
	   patient_residence_address_zip_code,
	   patient_residence_address_country,
	   tumor_type_name as patient_cancer_type,
	   tumor_type_code as patient_cancer_type_code,
	   primary_site as patient_cancer_primary_site,
	   metastasis_site as patient_cancer_metastasis_site,
--	   part_description,
	   patient_diagnosis_date,
	   patient_overall_survival_date

  from pt
  left
  join xm
	on pdrx_pt_deidentification_id = pt_pt_deidentification_id
  left
  join tm
	on mrn = patient_mrn

 order
	by 1
--------------------------------------------------------------------------------------------------



